buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'jvm-test-suite'
    id 'pmd'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
    integration {
        java {
            srcDir 'src/it/java'
            compileClasspath += project.configurations.testCompileClasspath + main.output + test.output
            runtimeClasspath += project.configurations.testRuntimeClasspath + main.output + test.output
        }
        resources {
            srcDir 'src/it/resources'
        }
    }
}

configurations {
    itImplementation.extendsFrom testImplementation
    itRuntime.extendsFrom testRuntime
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.4'
    implementation 'org.reflections:reflections:0.10.2'
    runtimeOnly 'com.h2database:h2:2.3.232'
    testImplementation 'org.junit.platform:junit-platform-suite:1.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.junit.platform:junit-platform-suite-engine:1.9.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.4'
}

test {
    useJUnitPlatform {
        includeEngines "junit-jupiter"
        excludeEngines "junit-vintage"
        testClassesDirs = testing.suites.test.sources.output.classesDirs
        classpath = testing.suites.test.sources.runtimeClasspath
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
    }
    jacoco {
        enabled = true
        includes = []
        excludes = ["com.sample.app.*"]
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        html.outputLocation = layout.buildDirectory.dir('reports/tests/test/jacoco')
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/sample/app/model/**/*.*',
                    '**/sample/app/*.*',
            ])
        })
    }
    dependsOn test
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeEngines "junit-jupiter"
        excludeEngines "junit-vintage"
        testClassesDirs = sourceSets.integration.output.classesDirs + testing.suites.test.sources.output.classesDirs
        classpath += sourceSets.integration.runtimeClasspath + testing.suites.test.sources.runtimeClasspath
    }
}

checkstyle {
    project.ext.checkstyleVersion = '8.20'    
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    consoleOutput = true
    toolVersion = "7.0.0"
}
